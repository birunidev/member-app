{"version":3,"sources":["asset/back.svg","asset/whatsapp.svg","components/Logo/Logo.js","components/Search/Search.js","containers/Container.js","components/Navbar/Navbar.js","components/Cards/Card/Card.js","CardContext.js","components/Cards/Cards.js","components/SingleCard/SingleCard.js","components/DetailCard/DetailCard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Logo","className","Search","change","type","placeholder","onChange","Container","props","children","Navbar","handleChange","Card","name","photo","phone","email","classes","username","src","alt","to","require","CardContext","createContext","CardProvider","useState","cards","setCards","isloading","setLoading","isError","seterror","useEffect","male","fetch","then","res","json","results","filter","man","gender","catch","err","Provider","value","Cards","searching","useContext","Error","style","textAlign","marginTop","filteredCards","card","first","toLowerCase","includes","map","index","key","last","picture","large","cell","login","SingleCard","cardDetail","detail","dateOfBirth","Array","from","dob","date","regYears","registered","slice","join","year","month","day","dOB","age","location","street","number","city","postcode","color","fontWeight","DetailCard","cardcomp","match","setCard","setisLoading","setError","userid","params","userId","tes","find","car","Back","App","searchChangeHandler","event","setState","searchfield","target","console","log","state","this","exact","path","render","Component","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uHAAAA,EAAOC,QAAU,IAA0B,kC,+NCA3CD,EAAOC,QAAU,IAA0B,sC,iJCW5BC,G,kBARF,WACT,OACI,yBAAKC,UAAU,gBACX,0DCOGC,G,MATA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEd,OACI,yBAAKF,UAAU,kBACX,2BAAOG,KAAK,OAAOC,YAAY,SAASC,SAAUH,OCG/CI,G,YARG,SAACC,GACf,OACI,yBAAKP,UAAU,aACVO,EAAMC,YCcJC,EAbA,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAEd,OACI,yBAAKV,UAAU,UACX,kBAAC,EAAD,KACI,yBAAKA,UAAU,eACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQE,OAAQQ,Q,uBCYrBC,EAtBF,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAEhD,OAEI,yBAAKjB,UAAWgB,GACZ,yBAAKhB,UAAU,iBACX,yBAAKkB,IAAKL,EAAOM,IAAI,sBAEzB,yBAAKnB,UAAU,UAEX,kBAAC,IAAD,CAAMoB,GAAE,WAAMH,GAAYjB,UAAU,QAAQY,GAC5C,uBAAGZ,UAAU,SAASe,GACtB,yBAAKf,UAAU,SACX,yBAAKkB,IAAKG,EAAQ,IAAgCF,IAAI,KACtD,uBAAGnB,UAAU,WAAWc,OChB/BQ,G,MAAcC,2BAGdC,EAAe,SAAAjB,GAAU,IAAD,EAEPkB,mBAAS,IAFF,mBAE1BC,EAF0B,KAEnBC,EAFmB,OAGDF,oBAAS,GAHR,mBAG1BG,EAH0B,KAGfC,EAHe,OAILJ,oBAAS,GAJJ,mBAI1BK,EAJ0B,KAIjBC,EAJiB,KA0BjC,OAlBAC,qBAAU,WACN,IAAIC,EACJJ,GAAW,GACXK,MAAM,qDACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFH,EAAOG,EAAIE,QAAQC,QAAO,SAAAC,GACtB,MAAsB,SAAfA,EAAIC,UAEfd,EAASM,GAETJ,GAAW,MACZa,OAAM,SAAAC,GACLZ,GAAS,QAGlB,IAEI,kBAACT,EAAYsB,SAAb,CACHC,MAAO,CAACnB,EAAOE,EAAWE,IACzBvB,EAAMC,W,QCUAsC,EApCD,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EAEOC,qBAAW1B,GAFlB,mBAEtBI,EAFsB,KAEfE,EAFe,KAGzBqB,EAHyB,KAGP,uBAAGC,MAAO,CAAEC,UAAW,SAAUC,UAAW,SAA5C,qCAA8F,KAChHC,EAAgB3B,EAAMa,QAAO,SAAAe,GAC7B,OAAOA,EAAK1C,KAAK2C,MAAMC,cAAcC,SAASV,EAAUS,kBAW5D,OARAxB,qBAAU,WAEN,OAAO,eAGR,IAKC,yBAAKhC,UAAU,iBACViD,EACArB,EAAY,kBAAC,uBAAD,MACTyB,EAAcK,KAAI,SAACJ,EAAMK,GACrB,OAAO,kBAAC,EAAD,CACHC,IAAKD,EACL3C,QAAQ,OACRJ,KAAI,UAAK0C,EAAK1C,KAAK2C,MAAf,YAAwBD,EAAK1C,KAAKiD,MACtC9C,MAAOuC,EAAKvC,MACZF,MAAOyC,EAAKQ,QAAQC,MACpBjD,MAAOwC,EAAKU,KACZ/C,SAAUqC,EAAKW,MAAMhD,gB,gCCgC9BiD,EAjEI,SAAC,GAAgB,IAW5BC,EAXcC,EAAa,EAAbA,OAGdC,EAAcC,MAAMC,KAAKH,EAAOI,IAAIC,MAGpCC,EAFUJ,MAAMC,KAAKH,EAAOO,WAAWF,MACvBG,MAAM,EAAG,GACRC,KAAK,IACtBC,EAAOT,EAAYO,MAAM,EAAG,GAC5BG,EAAQV,EAAYO,MAAM,EAAG,GAC7BI,EAAMX,EAAYO,MAAM,EAAG,IAC3BK,EAAG,UAAMD,EAAIH,KAAK,IAAf,cAAwBE,EAAMF,KAAK,IAAnC,cAA4CC,EAAKD,KAAK,KAgD7D,OA7CAV,EAAa,yBAAKnE,UAAU,eACxB,kBAAC,EAAD,CACIgB,QAAQ,kBACRH,MAAOuD,EAAON,QAAQC,MACtBnD,KAAI,UAAKwD,EAAOxD,KAAK2C,MAAjB,YAA0Ba,EAAOxD,KAAKiD,MAC1C9C,MAAOqD,EAAOrD,MACdD,MAAOsD,EAAOtD,MACdG,SAAUmD,EAAOH,MAAMhD,WAC3B,yBAAKjB,UAAU,eACX,+BACI,+BACI,4BACI,wCACA,sCAAQoE,EAAOxD,KAAK2C,MAApB,YAA6Ba,EAAOxD,KAAKiD,QAE7C,4BACI,mCACA,4BAAKO,EAAOI,IAAIU,MAEpB,4BACI,uCACA,sCAAQd,EAAOe,SAASC,OAAOC,OAA/B,YAAyCjB,EAAOe,SAASC,OAAOxE,QAEpE,4BACI,oCACA,4BAAKwD,EAAOe,SAASG,OAEzB,4BACI,wCACA,4BAAKlB,EAAOe,SAASI,WAEzB,4BACI,6CACA,4BAAKN,IAET,4BACI,sCACA,4BAAKb,EAAO3B,WAIxB,uBAAGS,MAAO,CAAEsC,MAAO,UAAWC,WAAY,QAA1C,gBAAiEf,KAKrE,yBAAK1E,UAAU,eACVmE,ICXEuB,EA7CI,SAAC,GAAe,IAqB3BC,EArBcC,EAAY,EAAZA,MAAY,EAENnE,mBAAS,IAFH,mBAEvB6B,EAFuB,KAEjBuC,EAFiB,OAGIpE,oBAAS,GAHb,mBAGvBG,EAHuB,KAGZkE,EAHY,OAIFrE,oBAAS,GAJP,mBAIvBK,EAJuB,KAIdiE,EAJc,KAK1BC,EAASJ,EAAMK,OAAOC,OAC1BlE,qBAAU,WAWN,OAVA8D,GAAa,GACb5D,MAAM,qDACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACF,IAAI+D,EAAM/D,EAAIE,QAAQ8D,MAAK,SAAAC,GAAG,OAAIA,EAAIpC,MAAMhD,WAAa+E,KACzDH,EAAQM,GACRL,GAAa,MACdpD,OAAM,SAAAC,GACLoD,GAAS,MAEV,eAER,CAACC,IAKAL,GADc,IAAd/D,EACW,kBAAC,uBAAD,MAEA,kBAAC,EAAD,CACPwC,OAAQd,IAGhB,IAAIL,EAAQnB,EAAU,uBAClBoB,MAAO,CAAEC,UAAW,SAAUC,UAAW,SADvB,qCACyE,KAE/F,OACI,kBAAC,WAAD,KACI,yBAAKpD,UAAU,QACX,kBAAC,IAAD,CAAMoB,GAAG,KACL,yBAAKF,IAAKoF,IAAMnF,IAAI,gBAG3B8B,EACA0C,ICEEY,E,YAtCb,WAAYhG,GAAQ,IAAD,8BACjB,4CAAMA,KAMRiG,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAO/D,QAC1CgE,QAAQC,IAAI,EAAKC,MAAMJ,cAPvB,EAAKI,MAAQ,CACXJ,YAAa,IAHE,E,sEAajB,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,yBAAK3G,UAAU,OACb,kBAAC,EAAD,CAAQU,aAAcsG,KAAKR,sBAC3B,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,gBAChB,kBAAC,EAAD,CAAOnE,UAAWiE,KAAKD,MAAMJ,eAE/B,kBAAC,IAAD,CAAOM,OAAK,EACVC,KAAK,sBACLC,OACE,SAAA5G,GAAK,OACH,kBAAC,EAAeA,e,GA7BpB6G,aCEEC,QACW,cAA7BC,OAAOnC,SAASoC,UAEe,UAA7BD,OAAOnC,SAASoC,UAEhBD,OAAOnC,SAASoC,SAAS3B,MACvB,2DCZN4B,IAASL,OAAO,kBAAC,EAAD,MAASM,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1F,MAAK,SAAA2F,GACjCA,EAAaC,kB","file":"static/js/main.a1813bb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/back.6a4886d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/whatsapp.1000c9e2.svg\";","import React from 'react'\r\nimport './logo.css'\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className=\"logo-wrapper\">\r\n            <h1>Organization Member App</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo","import React from 'react'\r\nimport './search.css'\r\n\r\n\r\nconst Search = ({ change }) => {\r\n\r\n    return (\r\n        <div className=\"search-wrapper\">\r\n            <input type=\"text\" placeholder=\"Search\" onChange={change} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","import React from 'react'\r\nimport './container.css'\r\n\r\nconst Container = (props) => {\r\n    return (\r\n        <div className=\"container\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container","import React from 'react'\r\nimport Logo from '../Logo/Logo'\r\nimport Search from '../Search/Search'\r\nimport './navbar.css'\r\nimport Container from '../../containers/Container'\r\n\r\n\r\nconst Navbar = ({ handleChange }) => {\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <Container>\r\n                <div className=\"navbar-flex\">\r\n                    <Logo />\r\n                    <Search change={handleChange} />\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\nexport default Navbar","import React from 'react'\r\nimport './card.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Card = ({ name, photo, phone, email, classes, username }) => {\r\n\r\n    return (\r\n\r\n        <div className={classes} >\r\n            <div className=\"photo-wrapper\">\r\n                <img src={photo} alt=\"display-profiles\" />\r\n            </div>\r\n            <div className=\"detail\">\r\n\r\n                <Link to={`/${username}`} className=\"name\">{name}</Link>\r\n                <p className=\"email\">{email}</p>\r\n                <div className=\"phone\">\r\n                    <img src={require('../../../asset/whatsapp.svg')} alt=\"\" />\r\n                    <p className=\"numbers\">{phone}</p>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Card","import React, { useState, createContext, useEffect } from 'react'\r\n\r\nexport const CardContext = createContext();\r\n\r\n\r\nexport const CardProvider = props => {\r\n\r\n    const [cards, setCards] = useState([]);\r\n    const [isloading, setLoading] = useState(false);\r\n    const [isError, seterror] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let male;\r\n        setLoading(true)\r\n        fetch('https://randomuser.me/api/?results=22&seed=foobar')\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                male = res.results.filter(man => {\r\n                    return man.gender === 'male'\r\n                })\r\n                setCards(male)\r\n\r\n                setLoading(false)\r\n            }).catch(err => {\r\n                seterror(true)\r\n            })\r\n\r\n    }, [])\r\n\r\n    return <CardContext.Provider\r\n        value={[cards, isloading, isError]}>\r\n        {props.children}\r\n    </CardContext.Provider>\r\n\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport Card from './Card/Card'\r\nimport './cards.css'\r\nimport { CardContext } from '../../CardContext'\r\nimport { CircleToBlockLoading } from 'react-loadingg';\r\n\r\n\r\nconst Cards = ({ searching }) => {\r\n\r\n    const [cards, isloading, isError] = useContext(CardContext)\r\n    let Error = isError ? <p style={{ textAlign: 'center', marginTop: '20px' }}>The page has failed to fetch data</p> : null\r\n    let filteredCards = cards.filter(card => {\r\n        return card.name.first.toLowerCase().includes(searching.toLowerCase())\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n\r\n        };\r\n    }, [])\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"cards-wrapper\">\r\n            {Error}\r\n            {isloading ? <CircleToBlockLoading /> :\r\n                filteredCards.map((card, index) => {\r\n                    return <Card\r\n                        key={index}\r\n                        classes=\"card\"\r\n                        name={`${card.name.first} ${card.name.last}`}\r\n                        email={card.email}\r\n                        photo={card.picture.large}\r\n                        phone={card.cell}\r\n                        username={card.login.username} />\r\n                })\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Cards\r\n","import React from 'react'\r\nimport '../DetailCard/detailcard.css'\r\nimport Card from '../Cards/Card/Card'\r\nconst SingleCard = ({ detail }) => {\r\n\r\n\r\n    let dateOfBirth = Array.from(detail.dob.date);\r\n    let regYear = Array.from(detail.registered.date);\r\n    let regis = regYear.slice(0, 4)\r\n    let regYears = regis.join('')\r\n    let year = dateOfBirth.slice(0, 4);\r\n    let month = dateOfBirth.slice(5, 7);\r\n    let day = dateOfBirth.slice(8, 10);\r\n    let dOB = `${day.join('')} - ${month.join('')} - ${year.join('')}`;\r\n    let cardDetail;\r\n\r\n    cardDetail = <div className=\"card-detail\">\r\n        <Card\r\n            classes=\"card-detail-big\"\r\n            photo={detail.picture.large}\r\n            name={`${detail.name.first} ${detail.name.last}`}\r\n            email={detail.email}\r\n            phone={detail.phone}\r\n            username={detail.login.username} />\r\n        <div className=\"detail-info\">\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Fullname</th>\r\n                        <td>{`${detail.name.first} ${detail.name.last}`}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Age</th>\r\n                        <td>{detail.dob.age}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Address</th>\r\n                        <td>{`${detail.location.street.number} ${detail.location.street.name}`}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>City</th>\r\n                        <td>{detail.location.city}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Postcode</th>\r\n                        <td>{detail.location.postcode}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Date of Birth</th>\r\n                        <td>{dOB}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Gender</th>\r\n                        <td>{detail.gender}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <p style={{ color: '#00A2C8', fontWeight: '500' }}>Member since {regYears}</p>\r\n        </div>\r\n    </div>\r\n\r\n    return (\r\n        <div className=\"single-card\">\r\n            {cardDetail}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleCard","import React, { Fragment, useEffect, useState } from 'react'\r\nimport './detailcard.css'\r\nimport Back from '../../asset/back.svg'\r\nimport { Link } from 'react-router-dom'\r\nimport { CircleToBlockLoading } from 'react-loadingg';\r\nimport SingleCard from '../SingleCard/SingleCard'\r\n\r\nconst DetailCard = ({ match }) => {\r\n\r\n    const [card, setCard] = useState([]);\r\n    const [isloading, setisLoading] = useState(true)\r\n    const [isError, setError] = useState(false)\r\n    let userid = match.params.userId\r\n    useEffect(() => {\r\n        setisLoading(true)\r\n        fetch('https://randomuser.me/api/?results=22&seed=foobar')\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                let tes = res.results.find(car => car.login.username === userid)\r\n                setCard(tes)\r\n                setisLoading(false)\r\n            }).catch(err => {\r\n                setError(true)\r\n            })\r\n        return () => {\r\n        }\r\n    }, [userid])\r\n\r\n    let cardcomp;\r\n\r\n    if (isloading === true) {\r\n        cardcomp = <CircleToBlockLoading />;\r\n    } else {\r\n        cardcomp = <SingleCard\r\n            detail={card} />\r\n    }\r\n\r\n    let Error = isError ? <p\r\n        style={{ textAlign: 'center', marginTop: '20px' }}>The page has failed to fetch data</p> : null\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"back\">\r\n                <Link to=\"/\">\r\n                    <img src={Back} alt=\"Back-icon\" />\r\n                </Link>\r\n            </div>\r\n            {Error}\r\n            {cardcomp}\r\n        </Fragment>\r\n    )\r\n}\r\nexport default DetailCard\r\n","import React, { Component } from 'react';\nimport './reset.css';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Cards from './components/Cards/Cards';\nimport Container from './containers/Container'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport DetailCard from './components/DetailCard/DetailCard';\nimport { CardProvider } from './CardContext'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      searchfield: ''\n    }\n  }\n\n  searchChangeHandler = (event) => {\n    this.setState({ searchfield: event.target.value })\n    console.log(this.state.searchfield)\n  }\n\n  render() {\n    return (\n      <Router>\n        <CardProvider>\n          <div className=\"App\">\n            <Navbar handleChange={this.searchChangeHandler} />\n            <Container>\n              <Switch>\n                <Route exact path=\"/member-app/\">\n                  <Cards searching={this.state.searchfield} />\n                </Route>\n                <Route exact\n                  path=\"/member-app/:userId\"\n                  render={\n                    props =>\n                      <DetailCard {...props} />\n                  } />\n              </Switch>\n            </Container>\n          </div>\n        </CardProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}